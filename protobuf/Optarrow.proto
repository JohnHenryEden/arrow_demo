syntax = "proto3";

package optarrow;

option go_package = "optarrowpb";
option java_package = "org.example.optarrow";
option python_package = "optarrow_pb2";

import "google/protobuf/timestamp.proto";

// -------------------------
// Enum: Error Codes
// -------------------------

enum ErrorCode {
  OK = 0;
  INVALID_MODEL = 1;
  SOLVER_NOT_FOUND = 2;
  TIMEOUT = 3;
  INTERNAL_ERROR = 4;
}

// -------------------------
// Message Definitions
// -------------------------

// Optional: Arrow-style wrapper for raw exchange
message FlightData {
  string descriptor = 1;
  bytes data_header = 2;
  bytes app_metadata = 3;
  bytes data_body = 1000;
}

// Model structure (broken into serialized parts)
message Model {
  bytes variables = 1;
  bytes constraints = 2;
  bytes objective = 3;
}

// Solver configuration
message SolverConfig {
  string solver_name = 1;
  map<string, string> solver_params = 2;
}

// Upload model
message ModelRequest {
  Model model_data = 1;
  bool store = 2;
}

// Upload result
message ModelResponse {
  ErrorCode error_code = 1;
  string message = 2;
  string model_id = 3;
}

// Full optimization request using raw model
message OptimizationRequest {
  Model model = 1;
  SolverConfig solver = 2;
}

// Optimization based on model_id
message OptimizeByIdRequest {
  string model_id = 1;
  SolverConfig solver = 2;
}

// Optimization result
message OptimizationResponse {
  ErrorCode error_code = 1;
  string message = 2;
  bytes result_data = 3;
}

// General-purpose response
message Ack {
  ErrorCode error_code = 1;
  string message = 2;
}

// -------------------------
// Service: Data Engine
// -------------------------

service DataEngineService {
  rpc UploadModel(ModelRequest) returns (ModelResponse);
  rpc GetModelById(ModelRequest) returns (Model);
  rpc Store(FlightData) returns (Ack);
}

// -------------------------
// Service: Optimization Engine
// -------------------------

service OptimizationEngineService {
  rpc RunOptimization(OptimizationRequest) returns (OptimizationResponse);
}

// -------------------------
// Service: Unified Gateway
// -------------------------

service UnifiedGatewayService {
  rpc Upload(ModelRequest) returns (ModelResponse);
  rpc Optimize(OptimizeByIdRequest) returns (OptimizationResponse);
}
